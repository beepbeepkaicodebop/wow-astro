---
import { getCollection } from "astro:content";
import BaseLayout from '../../layouts/BaseLayout.astro';

/* without collections:
  uses import.meta.glob to get all markdown files in the posts directory
  const allPosts = Object.values(
    import.meta.glob('../posts/*.md', { eager: true })
  )
*/

/*
  gets unique tags from all posts by:
    1. mapping over the posts list (an array) from import.meta.glob, and extracting their tags, flattening the resulting array of arrays into a single array:
  - "It goes through each Markdown post, one by one, and combines each array of tags into one single larger array"
    2. creating a Set to filter out duplicates:
  - "Then, it makes a new Set from all the individual tags it found (to ignore repeated values)." 
    3. turning this Set into an array as the final result:
  - "Finally, it turns that set into an array (with no duplications), that you can use to show a list of tags on your page."

const tags = [
  ...new Set(
    allPosts.map((post: any) => post.frontmatter.tags).flat()
  )
]*/

const allPosts = await getCollection("blog");
const tags = [
  ...new Set(
    allPosts.map((post) => post.data.tags).flat()
  )
];

const pageTitle = "wow-astro-say-what-";
const pageSubtitle = "about-dynamic-routing";
---

<BaseLayout pageTitle={pageTitle} pageSubtitle={pageSubtitle}>
	<h3>
		well oh well, an index (page) of tags!
  </h3>

  <div class="tags">
    {
      tags.map((tag) => 
        <p class="tag">
          <a href={`/tags/${tag}`}>
            {tag}
          </a>
        </p>
      )
    }
  </div>
</BaseLayout>

<style>
  a {
    color: #00539F;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
  }

  .tag {
    margin: 0.25em;
    border: dotted 1px #a1a1a1;
    border-radius: .5em;
    padding: .5em 1em;
    font-size: 1.15em;
    background-color: #F8FCFD;
  }
</style>