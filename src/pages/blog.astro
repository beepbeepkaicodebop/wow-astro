---
import { getCollection } from "astro:content";
import BaseLayout from '../layouts/BaseLayout.astro';
import BlogPost from '../components/BlogPost.astro';

/*
  The import.meta.glob function is a special Astro feature that allows you to import multiple files at once using a glob pattern. The { eager: true } option tells Astro to load the files immediately instead of lazily loading them when they are needed. This is useful for static site generation where you want to have all the data available at build time.

  Object.values() returns an array of values of the enumerable own properties of an object. @param o â€” Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.

  In this case, import.meta.glob is used to import all Markdown files in the ./posts/ directory, and Object.values is used to convert the resulting object into an array of post data that can be easily iterated over in the component.

const allPosts = Object.values(
  import.meta.glob('./posts/*.md', { eager: true })
);
*/

// Fetch all blog posts from the "blog" collection - defined in src/content/config.ts - when using the content collections feature, some stuff change. Check https://docs.astro.build/en/tutorial/6-islands/4/ for more info.
const allPosts = await getCollection("blog");

const pageTitle = "wow-astro-say-what-";
const pageSubtitle = "about-what?!";
---

<BaseLayout pageTitle={pageTitle} pageSubtitle={pageSubtitle}>
  <h3>AKA My Astro Learning Blog!</h3>
  <p>This is where I will post about my journey learning Astro.</p>

  <ul>
    {
      allPosts.map((post: any) => 
        <BlogPost 
          url={`/posts/${post.id}/`} 
          title={post.data.title} 
        />
      )
    }
  </ul>
</BaseLayout>